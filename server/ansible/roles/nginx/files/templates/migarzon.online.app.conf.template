# server {
# 	listen 80;
# 	server_name dominio.com www.dominio.com;
#  	return 301 https://dominio.com.br$request_uri;
# }

# server {
# 	listen 443 ssl;
# 	server_name www.${GARZON_HOSTNAME};
#
#   ssl_certificate ${GARZON_SSL_DIR}/${GARZON_HOSTNAME}_bundle.crt;
#   ssl_certificate_key ${GARZON_SSL_DIR}/${GARZON_HOSTNAME}.key;
# 	
#  	return 301 https://${GARZON_HOSTNAME}$request_uri;
# }

# server that performs a 301 redirect from the https hostname with www to without www
# # server {
# 	listen 443 ssl;
# 	server_name www.${GARZON_HOSTNAME};
# 	 
# 	# configura certificados https
#   ssl_certificate ${GARZON_SSL_DIR}/${GARZON_HOSTNAME}_bundle.crt;
#   ssl_certificate_key ${GARZON_SSL_DIR}/${GARZON_HOSTNAME}.key;
# 	
#  	return 301 https://${GARZON_HOSTNAME}$request_uri;
# }

# website
server {
  # Enable SSL v1.2, v1.3
  ssl_protocols TLSv1.2 TLSv1.3;

  listen 443 ssl;

  http2 on;

  server_name ${GARZON_HOSTNAME};

  ssl_certificate /etc/letsencrypt/live/${GARZON_HOSTNAME}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${GARZON_HOSTNAME}/privkey.pem;

	# https server configuration
  include /etc/nginx/conf.d/ssl.server.conf;
  
	# certbot location
	location /.well-known {
		root ${GARZON_ROOT}/static_files/certbot;

    # cache configuration
		include /etc/nginx/conf.d/cache.location.conf;

		try_files
			$request_uri
      =404;
	}
  
	# location for static files
	location / {
		root ${GARZON_STATIC_FILES};

    # cache configuration
		include /etc/nginx/conf.d/cache.location.conf;

    # 1. tries to load static files in the /static_files/ folder
    # 2. forwards to the front-end server
		try_files
			$request_uri =404;
      # @garzon_website_frontend;
	}

	# location for the backend api
  location ~* ^/api/ {
		include /etc/nginx/conf.d/proxy-headers.server.conf;

		proxy_pass http://garzon_website_backend:${GARZON_BACKEND_PORT};

		# keepalive
		resolver 127.0.0.11;
	}
}

